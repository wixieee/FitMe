import React, { useEffect, useState } from "react";
import "./calculator.css";
import "../assets/variables.css";
import { doc,  onSnapshot } from "firebase/firestore";
import { getAuth } from "firebase/auth";
import { db } from "../firebase";  

const Calculator = () => {
  const [selectedOption, setSelectedOption] = useState("calories");
  const [baseCalories, setBaseCalories] = useState(2100);
  const [totalCalories, setTotalCalories] = useState(2100);
  const [consumedCalories, setConsumedCalories] = useState(4000);
  const [percentage, setPercentage] = useState(0);

  const [foods, setFoods] = useState([
    { name: "–ö—É—Ä—è—á–∞ –≥—Ä—É–¥–∫–∞", calories: 165 },
    { name: "–°–∞–ª–∞—Ç –∑ —Ç—É–Ω—Ü–µ–º", calories: 210 },
  ]);

  const [workouts, setWorkouts] = useState([
    { name: "–ë—ñ–≥", burned: 300 },
    { name: "C–∏–ª–æ–≤—ñ –≤–ø—Ä–∞–≤–∏", burned: 180 },
  ]);

  const auth = getAuth();
  const userId = auth.currentUser?.uid;

useEffect(() => {
  // üîπ 1. –°–ø–æ—á–∞—Ç–∫—É –∑—á–∏—Ç—É—î–º–æ –∑ localStorage, —â–æ–± –º–∏—Ç—Ç—î–≤–æ –ø–æ–∫–∞–∑–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
  const savedBaseCalories = localStorage.getItem("baseCalories");
  if (savedBaseCalories) {
    setBaseCalories(Number(savedBaseCalories));
  }

  // üîπ 2. –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Å–ª—É—Ö–∞—á–∞ Firestore
  if (!userId) {
    console.warn("userId –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ");
    return;
  }

  const docRef = doc(db, "users", userId);

  const unsubscribe = onSnapshot(
    docRef,
    (docSnap) => {
      if (docSnap.exists()) {
        const data = docSnap.data();
        if (data.calories !== undefined) {
          setBaseCalories(data.calories);
          localStorage.setItem("baseCalories", data.calories);
        } else {
          console.warn("–ü–æ–ª–µ 'calories' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç—ñ.");
        }
      } else {
        console.warn("–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ —ñ—Å–Ω—É—î.");
      }
    },
    (error) => {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—ñ–¥–ø–∏—Å—Ü—ñ –Ω–∞ –∑–º—ñ–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:", error);
    }
  );

  // üîπ 3. –í—ñ–¥–ø–∏—Å–∫–∞ –ø—Ä–∏ —Ä–æ–∑–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  return () => unsubscribe();
}, [userId]);

  // üîÅ –û–Ω–æ–≤–ª—é—î–º–æ totalCalories –ø—Ä–∏ –∑–º—ñ–Ω—ñ selectedOption –∞–±–æ baseCalories
  useEffect(() => {
    let adjustedCalories = baseCalories;
    if (selectedOption === "weightLose") {
      adjustedCalories = baseCalories - 400;
    } else if (selectedOption === "weightGain") {
      adjustedCalories = baseCalories + 400;
    }
    setTotalCalories(adjustedCalories);
  }, [selectedOption, baseCalories]);

  // üîÅ –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–æ—Ü–µ–Ω—Ç –∫—ñ–ª—å—Ü—è
  useEffect(() => {
    if (totalCalories > 0) {
      const target = (consumedCalories / totalCalories) * 100;
      const timeout = setTimeout(() => {
        setPercentage(target);
      }, 100);
      return () => clearTimeout(timeout);
    }
  }, [consumedCalories, totalCalories]);

  const handleDeleteFood = (index) => {
    setFoods((prev) => prev.filter((_, i) => i !== index));
  };

  const handleDeleteWorkout = (index) => {
    setWorkouts((prev) => prev.filter((_, i) => i !== index));
  };
  return (
    
    <div className="calorie-container">
      <div className="calculator-description">
        <h1>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∫–∞–ª–æ—Ä—ñ–π</h1>
        <p>
          –í—ñ–¥—Å—Ç–µ–∂—É–π—Ç–µ —Å–ø–æ–∂–∏—Ç—ñ –∫–∞–ª–æ—Ä—ñ—ó —Ç–∞ —Å–ø–∞–ª–µ–Ω—ñ –ø—ñ–¥ —á–∞—Å —Ç—Ä–µ–Ω—É–≤–∞–Ω—å. –ö–æ—Ä–∏—Å—Ç—É–π—Ç–µ—Å—è
          —Ü–∏–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º, —â–æ–± –∑–∞–ª–∏—à–∞—Ç–∏—Å—è –≤ –º–µ–∂–∞—Ö —Å–≤–æ—î—ó —â–æ–¥–µ–Ω–Ω–æ—ó –Ω–æ—Ä–º–∏.
        </p>
      </div>
      <div className="calorie-content">
        <div className="left-panel">
          <div className="calculator-container">
      {/* Custom Radio Buttons */}
      <div className="goal-options">
        <label className={`custom-radio1 ${selectedOption === "calories" ? "selected" : ""}`}>
          <input
            type="radio"
            name="goal"
            value="calories"
            checked={selectedOption === "calories"}
            onChange={(e) => setSelectedOption(e.target.value)}
          />
          –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –≤–∞–≥–∏
        </label>

        <label className={`custom-radio1 ${selectedOption === "weightLose" ? "selected" : ""}`}>
          <input
            type="radio"
            name="goal"
            value="weightLose"
            checked={selectedOption === "weightLose"}
            onChange={(e) => setSelectedOption(e.target.value)}
          />
          –°—Ö—É–¥–Ω–µ–Ω–Ω—è
        </label>

        <label className={`custom-radio1 ${selectedOption === "weightGain" ? "selected" : ""}`}>
          <input
            type="radio"
            name="goal"
            value="weightGain"
            checked={selectedOption === "weightGain"}
            onChange={(e) => setSelectedOption(e.target.value)}
          />
          –ù–∞–±—ñ—Ä –≤–∞–≥–∏
        </label>
        </div>
      </div>
          <div className="circle">
            <div
              className="progress"
              style={{
                background: `conic-gradient(
                  ${percentage > 100 ? `#FF7F00 0% ${percentage - 100}%,` : ''}
                  var(--yellow) ${percentage > 100 ? `${percentage - 100}%` : '0%'} ${percentage > 100 ? '100%' : `${percentage}%`},
                  #1a1a1a ${percentage > 100 ? '100%' : `${percentage}%`} 100%
                )`
              }}
            >
              <div className="inner-ring"></div>
              <div className="center-text">
                <span>{Math.round(percentage)}%</span>
                <small>
                  {consumedCalories}/{totalCalories} –∫–∫–∞–ª
                </small>
              </div>
            </div>
          </div>

          {/* –û–∫—Ä–µ–º–æ –º–∞–∫—Ä–æ, –≤–∂–µ –∑–∞ –º–µ–∂–∞–º–∏ –∫–æ–ª–∞ */}
          <div className="macros-summary">
            <div className="macro">
              <span className="macro-label">–ë—ñ–ª–∫–∏</span>
              <span className="macro-value">10/110 –≥</span>
            </div>
            <div className="macro">
              <span className="macro-label">–ñ–∏—Ä–∏</span>
              <span className="macro-value">10/70 –≥</span>
            </div>
            <div className="macro">
              <span className="macro-label">–í—É–≥–ª–µ–≤–æ–¥–∏</span>
              <span className="macro-value">10/220 –≥</span>
            </div>
          </div>
        </div>

        {/* –ü—Ä–∞–≤–∞ –ø–∞–Ω–µ–ª—å */}
        <div className="side-panel">
          {/* –á–∂–∞ */}
          <div className="food-section">
            <h2>–°–ø–∏—Å–æ–∫ —ó–∂—ñ</h2>
            <input
              type="text"
              className="food-search"
              placeholder="–ü–æ—à—É–∫ —Å—Ç—Ä–∞–≤–∏..."
            />
            <ul className="food-list">
              {foods.map((food, index) => (
                <li key={index} className="food-item">
                  <span>{food.name}</span>
                  <div className="item-right">
                    <span className="calories">{food.calories} –∫–∫–∞–ª</span>
                    <button
                      className="delete-button"
                      onClick={() => handleDeleteFood(index)}
                    >
                      √ó
                    </button>
                  </div>
                </li>
              ))}
            </ul>
          </div>

          {/* –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è */}
          <div className="workouts-section">
            <h2>–¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è</h2>
            <input
              type="text"
              className="workout-search"
              placeholder="–ù–∞–∑–≤–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è..."
            />
            <ul className="workout-list">
              {workouts.map((workout, index) => (
                <li key={index} className="workout-item">
                  <span>{workout.name}</span>
                  <div className="item-right">
                    <span className="burned">{workout.burned} –∫–∫–∞–ª</span>
                    <button
                      className="delete-button"
                      onClick={() => handleDeleteWorkout(index)}
                    >
                      √ó
                    </button>
                  </div>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Calculator;